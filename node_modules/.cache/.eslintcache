[{"C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\index.js":"1","C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\App.js":"2","C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\pages\\menu\\Menu.js":"3","C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\pages\\fitMain\\FItMain.js":"4","C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\pages\\login\\Login.js":"5","C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\pages\\signup\\SignUp.js":"6","C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\pages\\fitMain\\FitMain.js":"7","C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\apiUrl.js":"8"},{"size":197,"mtime":1661340625508,"results":"9","hashOfConfig":"10"},{"size":653,"mtime":1661342166647,"results":"11","hashOfConfig":"10"},{"size":1251,"mtime":1661757942945,"results":"12","hashOfConfig":"10"},{"size":146,"mtime":1658972299936,"results":"13","hashOfConfig":"10"},{"size":3237,"mtime":1661758290792,"results":"14","hashOfConfig":"10"},{"size":16572,"mtime":1661759112081,"results":"15","hashOfConfig":"10"},{"size":11691,"mtime":1661758665009,"results":"16","hashOfConfig":"10"},{"size":513,"mtime":1661758359310,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tlfrsy",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\index.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\App.js",[],[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\pages\\menu\\Menu.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\pages\\fitMain\\FItMain.js",[],[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\pages\\login\\Login.js",[],[],"C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\pages\\signup\\SignUp.js",["46","47","48"],[],"import Style from \"./signUp.module.css\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport {\r\n  emailSendApiUrl,\r\n  emailAuthApiUrl,\r\n  signUpApiUrl,\r\n  loginApiUrl,\r\n} from \"../../apiUrl\";\r\naxios.defaults.withCredentials = true;\r\n\r\nconst SignUp = () => {\r\n  const [inputId, setInputId] = useState(\"\");\r\n  const [inputAuthNumber, setInputAuthNumber] = useState(\"\");\r\n  const [emailAuthorized, setEmailAuthorized] = useState(false);//이메일 인증 시 true로 전황\r\n  const [inputName, setInputName] = useState(\"\");\r\n  const [inputPw, setInputPw] = useState(\"\");\r\n  const [inputPwCheck, setInputPwCheck] = useState(\"\");\r\n  const [inputGender, setInputGender] = useState(\"\");\r\n  const [inputAge, setInputAge] = useState(\"\");\r\n  const [inputHeight, setInputHeight] = useState(\"\");\r\n  const [inputWeight, setInputWeight] = useState(\"\");\r\n\r\n  //Ref\r\n  const idInput = useRef();\r\n  const authNumberInput = useRef();\r\n  const nameInput = useRef();\r\n  const pwInput = useRef();\r\n  const pwCheckInput = useRef();\r\n  const ageInput = useRef();\r\n  const heightInput = useRef();\r\n  const weightInput = useRef();\r\n\r\n  const [isId, setIsId] = useState(false);/* 이거 뭐야 지훈아? */\r\n\r\n  //submit\r\n  const submitHandler = () => {\r\n    //공란 확인\r\n    if (inputId.length === 0) {\r\n      idInput.current.focus();\r\n      alert(\"이메일을 입력해 주세요\");\r\n      return;\r\n    }\r\n    if (inputAuthNumber.length === 0 || !emailAuthorized) {\r\n      authNumberInput.current.focus();\r\n      alert(\"이메일 인증을 완료해 주세요\");\r\n      return;\r\n    }\r\n    if (inputPw.length === \"\") {\r\n      pwInput.current.focus();\r\n      alert(\"비밀번호를 확인해 주세요\");\r\n      return;\r\n    }\r\n    if (inputPwCheck.length === 0) {\r\n      pwInput.current.focus();\r\n      alert(\"비밀번호 확인란을 입력해 주세요\");\r\n      return;\r\n    }\r\n    if (inputName.length === 0) {\r\n      nameInput.current.focus();\r\n      alert(\"닉네임을 입력해 주세요\");\r\n      return;\r\n    }\r\n    if (inputPwCheck.length === 0) {\r\n      pwCheckInput.current.focus();\r\n      alert(\"이메일을 입력해 주세요\");\r\n      return;\r\n    }\r\n    if (inputAge.length === 0) {\r\n      ageInput.current.focus();\r\n      alert(\"나이를 입력해 주세요\");\r\n      return;\r\n    }\r\n    if (inputGender === \"\") {\r\n      alert(\"성별을 입력해 주세요\");\r\n      return;\r\n    }\r\n    if (inputWeight.length === 0) {\r\n      weightInput.current.focus();\r\n      alert(\"몸무게를 입력해 주세요\");\r\n      return;\r\n    }\r\n    if (inputHeight.length === 0) {\r\n      heightInput.current.focus();\r\n      alert(\"키를 입력해 주세요\");\r\n      return;\r\n    }\r\n\r\n    //비밀번호 동일 확인\r\n    if(inputPw !== inputPwCheck){\r\n      alert(\"비밀번호를 다시 입력해주세요\");\r\n      pwInput.current.focus();\r\n      setInputPw(\"\");\r\n      setInputPwCheck(\"\");\r\n      return;\r\n    }\r\n\r\n    //문제가 없는 경우 서버에 send\r\n    axios.post(signUpApiUrl, {\r\n      email: inputId,\r\n      password: inputPw,\r\n      nick: inputName,\r\n      age: inputAge,\r\n      gender: inputGender,\r\n      weight: inputWeight,\r\n      height: inputHeight,\r\n    })\r\n    .then((res) => {\r\n      alert(\"정상적으로 회원가입 되었습니다.\");\r\n      axios.post(loginApiUrl, {\r\n        email: inputId,\r\n        password: inputPw,\r\n      })\r\n      .then((res) => {\r\n        alert(\"정상적으로 로그인 되었습니다.\");\r\n        window.location.href=\"/\";\r\n      })\r\n      .catch((res) => {\r\n        alert(\"로그인 하지 못했습니다. 다시 로그인 해주세요\");\r\n        window.location.href=\"/login\";\r\n      })\r\n    })\r\n    .catch((res) => {\r\n      alert(\"문제가 발생했습니다.\");\r\n      console.log(res);\r\n    })\r\n  };\r\n\r\n  //password확인\r\n  const passwordCheckFunc = () => {\r\n    if (inputPw !== inputPwCheck) {\r\n      document.querySelector(\"#passwordCheck\").style.border = \"solid 1px rgb(255, 0, 0)\";\r\n    }\r\n    else {\r\n      document.querySelector(\"#passwordCheck\").style.border = \"solid 1px rgb(200, 200, 200)\";\r\n    }\r\n  };\r\n  useEffect(passwordCheckFunc, [inputPwCheck]);\r\n\r\n  //return클릭handler\r\n  const returnHandler = () => {\r\n    window.location.href=\"/login\"\r\n  };\r\n\r\n  //이메일 인증 클릭 handler\r\n  const emailSendHandler = () =>{\r\n    if(inputId === '') {\r\n      alert(\"이메일을 입력해 주세요.\");\r\n      return;\r\n    }\r\n    if(!inputId.includes(\"@\") || !inputId.includes(\".\")){\r\n      alert(\"정확한 이메일형식을 맞춰서 입력해 주세요.\");\r\n      return;\r\n    }\r\n\r\n    axios.post(emailSendApiUrl,{\r\n      mail: inputId,\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      alert(\"인증 메일을 보냈습니다.\");\r\n    })\r\n    .catch((res) => {\r\n      console.log(res);\r\n      alert(\"문제가 발생했습니다.\");\r\n    })\r\n  };\r\n\r\n  //이메일 인증번호 제출 handler\r\n  const emailAuthHandler = () =>{\r\n    if(inputAuthNumber === '') {\r\n      alert(\"인증번호를 입력해 주세요\");\r\n      return;\r\n    }\r\n\r\n    axios.post(emailAuthApiUrl,{\r\n      authNum: Number(inputAuthNumber),\r\n    })\r\n    .then((res) => {\r\n      console.log(res);\r\n      setEmailAuthorized(true);\r\n      alert(\"인증되었습니다.\");\r\n      document.querySelector(\"#signUpEmail\").disabled = true;\r\n      document.querySelector(\"#emailAuth\").disabled = true;\r\n    })\r\n    .catch((res) => {\r\n      console.log(res);\r\n      alert(\"문제가 발생했습니다.\");\r\n    })\r\n  };\r\n\r\n  //input data의 변화 있을 때마다 value값 변경하여 useState\r\n  const handleInputId = (e) => {\r\n    setInputId(e.target.value);\r\n  };\r\n  const handleInputAuthNumber = (e) => {\r\n    setInputAuthNumber(e.target.value);\r\n  }\r\n  const handleInputName = (e) => {\r\n    setInputName(e.target.value);\r\n  };\r\n  const handleInputPw = (e) => {\r\n    setInputPw(e.target.value);\r\n  };\r\n  const handleInputPwCheck = (e) => {\r\n    setInputPwCheck(e.target.value);\r\n  };\r\n  const handelInputGender = (e) => {\r\n    if(e.target.id === 'male'){\r\n      setInputGender(true);\r\n    }\r\n    else{\r\n      setInputGender(false);\r\n    }\r\n  };\r\n  const handleInputAge = (e) => {\r\n    setInputAge(e.target.value);\r\n  };\r\n  const handleInputHeight = (e) => {\r\n    setInputHeight(e.target.value);\r\n  };\r\n  const handleInputWeight = (e) => {\r\n    setInputWeight(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form className={Style.signUpBoxCover}>\r\n      <div className={Style.Cover}>\r\n        <p className={Style.title}>Sign Up</p>\r\n      </div>\r\n      <div className={Style.Cover}>\r\n        <div className={Style.signupMain}>\r\n          {/*이메일*/}\r\n          <div className={Style.Cover}>\r\n            <div className={Style.labelInputArea}>\r\n              <div className={Style.Cover}>\r\n                <label \r\n                  htmlFor=\"signUpEmail\"\r\n                  className={Style.formLabel}>\r\n                  Email\r\n                </label>\r\n              </div>\r\n              <div className={Style.Cover}>\r\n                <input\r\n                  ref={idInput}\r\n                  className={Style.formInput}\r\n                  id=\"signUpEmail\"\r\n                  type=\"email\"\r\n                  name=\"input_id\"\r\n                  value={inputId}\r\n                  placeholder=\"Example@mail.com\"\r\n                  onChange={handleInputId}\r\n                />\r\n              </div>\r\n              <div className={Style.Cover}>\r\n                <button className={Style.btn} type=\"button\" onClick={emailSendHandler}>인증</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*이메일 인증*/}\r\n          <div className={Style.Cover}>\r\n            <div className={Style.labelInputArea}>\r\n              <div className={Style.Cover}>\r\n                <label \r\n                  htmlFor=\"emailAuth\"\r\n                  className={Style.formLabel}>\r\n                  인증번호\r\n                </label>\r\n              </div>\r\n              <div className={Style.Cover}>\r\n                <input\r\n                  ref={authNumberInput}\r\n                  className={Style.formInput}\r\n                  id=\"emailAuth\"\r\n                  type=\"email\"\r\n                  name=\"input_id\"\r\n                  value={inputAuthNumber}\r\n                  placeholder=\"인증번호를 입력해 주세요\"\r\n                  onChange={handleInputAuthNumber}\r\n                />\r\n              </div>\r\n              <div className={Style.Cover}>\r\n                <button className={Style.btn} type=\"button\" onClick={emailAuthHandler}>제출</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*비밀번호*/}\r\n          <div className={Style.Cover}>\r\n            <div className={Style.labelInputArea}>\r\n              <div className={Style.Cover}>\r\n                <label \r\n                  htmlFor=\"password\"\r\n                  className={Style.formLabel}>\r\n                  password\r\n                </label>\r\n              </div>\r\n              <div className={Style.Cover}>\r\n                <input\r\n                  ref={pwInput}\r\n                  id=\"password\"\r\n                  className={Style.formInput}\r\n                  type=\"password\"\r\n                  name=\"input_pw\"\r\n                  value={inputPw}\r\n                  placeholder=\"Password\"\r\n                  onChange={handleInputPw}\r\n                />\r\n              </div>\r\n              <div />\r\n            </div>\r\n          </div>\r\n          {/*비밀번호 확인*/}\r\n          <div className={Style.Cover}>\r\n            <div className={Style.labelInputArea}>\r\n              <div className={Style.Cover}>\r\n                <label \r\n                  htmlFor=\"passwordCheck\"\r\n                  className={Style.formLabel}>\r\n                  password Check\r\n                </label>\r\n              </div>\r\n              <div className={Style.Cover}>\r\n                <input\r\n                  ref={pwCheckInput}\r\n                  id=\"passwordCheck\"\r\n                  className={Style.formInput}\r\n                  type=\"password\"\r\n                  name=\"input_pw_check\"\r\n                  placeholder=\"PassWord Check\"\r\n                  value={inputPwCheck}\r\n                  onChange={handleInputPwCheck}\r\n                />\r\n              </div>\r\n              <div />\r\n            </div>\r\n          </div>\r\n          {/*닉네임*/}\r\n          <div className={Style.Cover}>\r\n            <div className={Style.labelInputArea}>\r\n              <div className={Style.Cover}>\r\n                <label \r\n                  htmlFor=\"Nickname\"\r\n                  className={Style.formLabel}>\r\n                  Nickname\r\n                </label>\r\n              </div>\r\n              <div className={Style.Cover}>\r\n                <input\r\n                  ref={nameInput}\r\n                  id=\"Nickname\"\r\n                  className={Style.formInput}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={inputName}\r\n                  placeholder=\"Name\"\r\n                  onChange={handleInputName}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*나이, 성별*/}\r\n          <div className={Style.Cover}>\r\n            <div className={Style.onelineTwoInputArea}>\r\n              {/*나이*/}\r\n              <div className={Style.Cover}>\r\n                <div className={Style.labelInputOnlyArea}>\r\n                  <div className={Style.Cover}>\r\n                    <label \r\n                      htmlFor=\"age\"\r\n                      className={Style.formLabel}>\r\n                      Age\r\n                    </label>\r\n                  </div>\r\n                  <div className={Style.Cover}>\r\n                    <input\r\n                      ref={ageInput}\r\n                      id=\"age\"\r\n                      className={Style.formInput}\r\n                      onKeyPress={(event) => {\r\n                        if (!/[0-9]/.test(event.key)) {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      placeholder=\"Age\"\r\n                      value={inputAge}\r\n                      onChange={handleInputAge}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/*성별*/}\r\n              <div className={Style.Cover}>\r\n                <div className={Style.labelInputOnlyArea}>\r\n                  <div className={Style.Cover}>\r\n                    <label\r\n                      className={Style.formLabel}>\r\n                      Gender\r\n                    </label>\r\n                  </div>\r\n                  <div className={Style.Cover}>\r\n                    <div className={Style.onelineTwoInputArea}>\r\n                      <div className={Style.Cover}>\r\n                        <div className={Style.formInputRadio}>\r\n                          <input\r\n                            id=\"male\"\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            onChange={handelInputGender}\r\n                          /><label htmlFor=\"male\">Male</label>\r\n                        </div>\r\n                      </div>\r\n                      <div className={Style.Cover}>\r\n                        <div className={Style.formInputRadio}>\r\n                          <input\r\n                            id=\"female\"\r\n                            type=\"radio\"\r\n                            name=\"gender\"\r\n                            onChange={handelInputGender}\r\n                          /><label htmlFor=\"female\">Female</label>\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/*몸무게, 키*/}\r\n          <div className={Style.Cover}>\r\n            <div className={Style.onelineTwoInputArea}>\r\n              {/*몸무게*/}\r\n              <div className={Style.Cover}>\r\n                <div className={Style.labelInputOnlyArea}>\r\n                  <div className={Style.Cover}>\r\n                    <label \r\n                      htmlFor=\"weight\"\r\n                      className={Style.formLabel}>\r\n                      Weight\r\n                    </label>\r\n                  </div>\r\n                  <div className={Style.Cover}>\r\n                    <input\r\n                      ref={weightInput}\r\n                      id=\"weight\"\r\n                      className={Style.formInput}\r\n                      onKeyPress={(event) => {\r\n                        if (!/[0-9]/.test(event.key)) {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      placeholder=\"Weight\"\r\n                      value={inputWeight}\r\n                      onChange={handleInputWeight}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/*키*/}\r\n              <div className={Style.Cover}>\r\n                <div className={Style.labelInputOnlyArea}>\r\n                  <div className={Style.Cover}>\r\n                    <label \r\n                      htmlFor=\"height\"\r\n                      className={Style.formLabel}>\r\n                      Height\r\n                    </label>\r\n                  </div>\r\n                  <div className={Style.Cover}>\r\n                    <input\r\n                      ref={heightInput}\r\n                      id=\"height\"\r\n                      className={Style.formInput}\r\n                      onKeyPress={(event) => {\r\n                        if (!/[0-9]/.test(event.key)) {\r\n                          event.preventDefault();\r\n                        }\r\n                      }}\r\n                      placeholder=\"Height\"\r\n                      value={inputHeight}\r\n                      onChange={handleInputHeight}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={Style.Cover}>\r\n        <div className={Style.buttonCover}>\r\n          <div className={Style.Cover}>\r\n            <button className={Style.btn} type=\"button\" onClick={returnHandler}>Return</button>\r\n          </div>\r\n          <div className={Style.Cover}>\r\n            <button className={Style.btn} type=\"button\" onClick={submitHandler}>Submit</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SignUp;","C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\pages\\fitMain\\FitMain.js",["49"],[],"import Style from \"./fitMain.module.css\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FitMain = () => {\r\n  //const [shoulderClicked, setShoulderClicked] = useState(false);\r\n  const [valid, setValid] = useState();\r\n  const [exercise, setExercise] = useState();\r\n\r\n  const Shoulder = () => {\r\n    setValid((current) => \"S\");\r\n  };\r\n  const Back = () => {\r\n    setValid((current) => \"B\");\r\n  };\r\n  const Chest = () => {\r\n    setValid((current) => \"C\");\r\n  };\r\n  const Leg = () => {\r\n    setValid((current) => \"L\");\r\n  };\r\n  const Arm = () => {\r\n    setValid((current) => \"A\");\r\n  };\r\n  const Core = () => {\r\n    setValid((current) => \"Co\");\r\n  };\r\n\r\n  //어깨 삼각근\r\n  const ShoulderFront = () => {\r\n    setExercise((current) => \"S1\");\r\n  };\r\n  const ShoulderSide = () => {\r\n    setExercise((current) => \"S2\");\r\n  };\r\n  const ShoulderBack = () => {\r\n    setExercise((current) => \"S3\");\r\n  };\r\n  //등 운동\r\n  const BackLats = () => {\r\n    setExercise((current) => \"B1\");\r\n  };\r\n  const BackUpper = () => {\r\n    setExercise((current) => \"B2\");\r\n  };\r\n  const BackMiddle = () => {\r\n    setExercise((current) => \"B3\");\r\n  };\r\n  const BackLow = () => {\r\n    setExercise((current) => \"B4\");\r\n  };\r\n\r\n  const ChestUpper = () => {\r\n    setExercise((current) => \"C1\");\r\n  };\r\n  const ChestMiddle = () => {\r\n    setExercise((current) => \"C2\");\r\n  };\r\n  const ChestLow = () => {\r\n    setExercise((current) => \"C3\");\r\n  };\r\n\r\n  const LegQuad = () => {\r\n    setExercise((current) => \"L1\");\r\n  };\r\n  const LegBiceps = () => {\r\n    setExercise((current) => \"L2\");\r\n  };\r\n  const LegGlutes = () => {\r\n    setExercise((current) => \"L3\");\r\n  };\r\n\r\n  const ArmBiceps = () => {\r\n    setExercise((current) => \"A1\");\r\n  };\r\n  const ArmTriceps = () => {\r\n    setExercise((current) => \"A2\");\r\n  };\r\n  const ArmFore = () => {\r\n    setExercise((current) => \"A3\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <button type=\"button\" onClick={Shoulder}>\r\n            Shoulder\r\n          </button>\r\n        </div>\r\n        {valid === \"S\" ? (\r\n          <div>\r\n            <button type=\"button\" onClick={ShoulderFront}>\r\n              Front\r\n            </button>\r\n            {exercise === \"S1\" ? (\r\n              <div>\r\n                <button type=\"button\">Barbell Shoulder Press</button>\r\n                <button type=\"button\">Dumbbell Shoulder Press</button>\r\n                <button type=\"button\">Shoulder Press Machine</button>\r\n                <button type=\"button\">Military Press</button>\r\n                <button type=\"button\">Front Raise</button>\r\n              </div>\r\n            ) : null}\r\n\r\n            <button type=\"button\" onClick={ShoulderSide}>\r\n              Side\r\n            </button>\r\n            {exercise === \"S2\" ? (\r\n              <div>\r\n                <button type=\"button\">Side Lateral Raise</button>\r\n                <button type=\"button\">Upright Row</button>\r\n                <button type=\"button\">Arnold Press</button>\r\n              </div>\r\n            ) : null}\r\n            <button type=\"button\" onClick={ShoulderBack}>\r\n              Back Side\r\n            </button>\r\n            {exercise === \"S3\" ? (\r\n              <div>\r\n                <button type=\"button\">BentOver Raise</button>\r\n                <button type=\"button\">Reverse Pec Dec Fly</button>\r\n                <button type=\"button\">Face Pull</button>\r\n                <button type=\"button\">Cable Reverse Fly</button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n\r\n        <div>\r\n          <button type=\"button\" onClick={Back}>\r\n            Back\r\n          </button>\r\n        </div>\r\n        {valid === \"B\" ? (\r\n          <div>\r\n            <button type=\"button\" onClick={BackLats}>\r\n              Lats\r\n            </button>\r\n            {exercise === \"B1\" ? (\r\n              <div>\r\n                <button type=\"button\">Pull Up</button>\r\n                <button type=\"button\">Lat Pull Down</button>\r\n                <button type=\"button\">Straight Arm Pull Down</button>\r\n                <button type=\"button\">Dumbbell Row</button>\r\n                <button type=\"button\">One Arm Dumbbell Row</button>\r\n                <button type=\"button\">Romanian DeadLift </button>\r\n                <button type=\"button\">Seated Cable Row</button>\r\n              </div>\r\n            ) : null}\r\n\r\n            <button type=\"button\" onClick={BackUpper}>\r\n              Upper Back\r\n            </button>\r\n            {exercise === \"B2\" ? (\r\n              <div>\r\n                <button type=\"button\">Bent Over Barbell Row</button>\r\n                <button type=\"button\">Shrug</button>\r\n                <button type=\"button\">Reverse Fly</button>\r\n                <button type=\"button\">Pull Up</button>\r\n              </div>\r\n            ) : null}\r\n            <button type=\"button\" onClick={BackMiddle}>\r\n              Middle Back\r\n            </button>\r\n            {exercise === \"B3\" ? (\r\n              <div>\r\n                <button type=\"button\">Bent Over Barbell Row</button>\r\n                <button type=\"button\">Seated Chest Supported Row</button>\r\n                <button type=\"button\">Seated Cable Row</button>\r\n                <button type=\"button\">Pull Up</button>\r\n              </div>\r\n            ) : null}\r\n\r\n            <button type=\"button\" onClick={BackLow}>\r\n              Lower Back\r\n            </button>\r\n            {exercise === \"B4\" ? (\r\n              <div>\r\n                <button type=\"button\">Chin Up</button>\r\n                <button type=\"button\">Rack Pull</button>\r\n                <button type=\"button\">DeadLift</button>\r\n                <button type=\"button\">High Low Machine</button>\r\n                <button type=\"button\">One Arm Dumbbell Row</button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n\r\n        <div>\r\n          <button type=\"button\" onClick={Chest}>\r\n            Chest\r\n          </button>\r\n        </div>\r\n        {valid === \"C\" ? (\r\n          <div>\r\n            <button type=\"button\" onClick={ChestUpper}>\r\n              Upper Chest\r\n            </button>\r\n            {exercise === \"C1\" ? (\r\n              <div>\r\n                <button type=\"button\">Incline Bench Press</button>\r\n                <button type=\"button\">Incline Dumbbell Press</button>\r\n                <button type=\"button\">Decline Push Up</button>\r\n                <button type=\"button\">Low Cable Fly</button>\r\n              </div>\r\n            ) : null}\r\n            <button type=\"button\" onClick={ChestMiddle}>\r\n              Middle Chest\r\n            </button>\r\n            {exercise === \"C2\" ? (\r\n              <div>\r\n                <button type=\"button\">Bench Press</button>\r\n                <button type=\"button\">Dumbbell Press</button>\r\n                <button type=\"button\">Pec Dec Fly</button>\r\n                <button type=\"button\">Chest Press</button>\r\n                <button type=\"button\">Cable Fly</button>\r\n                <button type=\"button\">Push Up</button>\r\n              </div>\r\n            ) : null}\r\n            <button type=\"button\" onClick={ChestLow}>\r\n              Lower Chest\r\n            </button>\r\n            {exercise === \"C3\" ? (\r\n              <div>\r\n                <button type=\"button\">Decline Bench Press</button>\r\n                <button type=\"button\">Dips</button>\r\n                <button type=\"button\">Incline Push Up</button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n\r\n        <div>\r\n          <button type=\"button\" onClick={Leg}>\r\n            Leg\r\n          </button>\r\n        </div>\r\n        {valid === \"L\" ? (\r\n          <div>\r\n            <button type=\"button\" onClick={LegQuad}>\r\n              Quadriceps\r\n            </button>\r\n            {exercise === \"L1\" ? (\r\n              <div>\r\n                <button type=\"button\">Waliking Lunge</button>\r\n                <button type=\"button\">Bulgarian Split Squat</button>\r\n                <button type=\"button\">Front Squat</button>\r\n                <button type=\"button\">Leg Extension</button>\r\n                <button type=\"button\">Leg Press</button>\r\n                <button type=\"button\">Barbell Back Squat</button>\r\n              </div>\r\n            ) : null}\r\n\r\n            <button type=\"button\" onClick={LegBiceps}>\r\n              Biceps Femoris\r\n            </button>\r\n            {exercise === \"L2\" ? (\r\n              <div>\r\n                <button type=\"button\">Leg Curl</button>\r\n                <button type=\"button\">Barbell Back Squat</button>\r\n                <button type=\"button\">Leg Press</button>\r\n                <button type=\"button\">Stiff DeadLift</button>\r\n                <button type=\"button\">DeadLift</button>\r\n              </div>\r\n            ) : null}\r\n            <button type=\"button\" onClick={LegGlutes}>\r\n              Glutes\r\n            </button>\r\n            {exercise === \"L3\" ? (\r\n              <div>\r\n                <button type=\"button\">Stiff DeadLift</button>\r\n                <button type=\"button\">DeadLift</button>\r\n                <button type=\"button\">Hips Thrusts</button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n\r\n        <div>\r\n          <button type=\"button\" onClick={Arm}>\r\n            Arm\r\n          </button>\r\n        </div>\r\n        {valid === \"A\" ? (\r\n          <div>\r\n            <button type=\"button\" onClick={ArmBiceps}>\r\n              Biceps\r\n            </button>\r\n            {exercise === \"A1\" ? (\r\n              <div>\r\n                <button type=\"button\">Barbell Curl</button>\r\n                <button type=\"button\">Chin Up</button>\r\n                <button type=\"button\">Preacher Curl</button>\r\n                <button type=\"button\">Hammer Curl</button>\r\n                <button type=\"button\">Incline Dumbbell Curl</button>\r\n                <button type=\"button\">Concentration Curl</button>\r\n              </div>\r\n            ) : null}\r\n            <button type=\"button\" onClick={ArmTriceps}>\r\n              Triceps\r\n            </button>\r\n            {exercise === \"A2\" ? (\r\n              <div>\r\n                <button type=\"button\">Dips</button>\r\n                <button type=\"button\">Rope Tricep Push Down</button>\r\n                <button type=\"button\">SkullCrusher</button>\r\n                <button type=\"button\">Tricep Extension</button>\r\n                <button type=\"button\">Close Grip Bench Press</button>\r\n              </div>\r\n            ) : null}\r\n            <button type=\"button\" onClick={ArmFore}>\r\n              ForeArm\r\n            </button>\r\n            {exercise === \"A3\" ? (\r\n              <div>\r\n                <button type=\"button\">EZ-Bar Reverse Curl</button>\r\n                <button type=\"button\">Barbell Reverse Biceps Curl</button>\r\n                <button type=\"button\">Hammer Curl</button>\r\n                <button type=\"button\">Zottman Curl</button>\r\n                <button type=\"button\">Farmer's Carry</button>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n\r\n        <div>\r\n          <button type=\"button\" onClick={Core}>\r\n            Core\r\n          </button>\r\n        </div>\r\n        {valid === \"Co\" ? (\r\n          <div>\r\n            <button type=\"button\">Plank</button>\r\n            <button type=\"button\">L-sit</button>\r\n            <button type=\"button\">AB Rollout</button>\r\n            <button type=\"button\">DeadLift</button>\r\n            <button type=\"button\">Squat</button>\r\n            <button type=\"button\">Sit Up</button>\r\n          </div>\r\n        ) : null}\r\n\r\n        <Link to=\"/\">\r\n          <div>\r\n            <button type=\"button\">Return</button>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FitMain;\r\n","C:\\Users\\luckh\\OneDrive\\Desktop\\health\\src\\apiUrl.js",[],[],{"ruleId":"50","severity":1,"message":"51","line":34,"column":10,"nodeType":"52","messageId":"53","endLine":34,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":34,"column":16,"nodeType":"52","messageId":"53","endLine":34,"endColumn":23},{"ruleId":"55","severity":1,"message":"56","line":138,"column":32,"nodeType":"57","endLine":138,"endColumn":46,"suggestions":"58"},{"ruleId":"50","severity":1,"message":"59","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":13},"no-unused-vars","'isId' is assigned a value but never used.","Identifier","unusedVar","'setIsId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'inputPw'. Either include it or remove the dependency array.","ArrayExpression",["60"],"'Style' is defined but never used.",{"desc":"61","fix":"62"},"Update the dependencies array to be: [inputPw, inputPwCheck]",{"range":"63","text":"64"},[3730,3744],"[inputPw, inputPwCheck]"]